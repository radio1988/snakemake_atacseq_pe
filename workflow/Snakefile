import sys, os
import pandas as pd
from snakemake.utils import min_version
from scripts.functions import read_meta

#min_version("6.14.0")
configfile: 'config/config.yaml'
shell.prefix("""
    
     """)

samples, groups, contrast_names, g2s, c2g = read_meta()


def targets_input():
    L = []
    L.append('results/workflow.svg')
    L.append(['results/{d}/fastqc_report.html'.format(d=d) for d in ['fastqc_raw', 'fastqc_trimmed']])
    #L.append(['results/{d}_qc/bamqc_report.html'.format(d=d) for d in ['sorted_reads', 'clean_reads', 'markDup']])
    L.append('results/sorted_reads_qc/bamqc_report.html')
    #L.append("results/clean_reads_chipqc/done")
    L.append(['results/genrich/merged.narrowPeak', 'results/genrich/merged.bw'])
    L.append(['results/genrich/merged.narrowPeak.full_anno.xlsx', 'results/genrich/merged.featurecount.txt'])
    L.append(['results/genrich/{}.narrowPeak'.format(s) for s in samples])
    L.append(['results/genrich/{}.bw'.format(s) for s in samples])
    L.append(['results/genrich_group/{}.narrowPeak'.format(g) for g in groups])
    L.append(["results/genrich_group/{}.narrowPeak.full_anno.xlsx".format(g) for g in groups])
    L.append(['results/genrich_contrast/{}.narrowPeak'.format(c) for c in contrast_names])
    L.append(['results/genrich_contrast/{}.narrowPeak.full_anno.xlsx'.format(c) for c in contrast_names])
    return (L)

rule targets:
    input: 
        targets_input()
    resources: 
        mem_mb=lambda wildcards, attempt: attempt * 1000 

include: 'rules/create_dag.smk'
include: 'rules/fastqc.smk'
include: 'rules/trimmomatic.smk'
include: 'rules/bowtie2.smk'
include: 'rules/samtools.smk'
include: 'rules/bam_filter.smk'
include: 'rules/bamqc.smk'
include: 'rules/chipqc.smk'
include: 'rules/genrich.smk'
include: 'rules/chippeakanno.smk'
include: 'rules/featurecount.smk'